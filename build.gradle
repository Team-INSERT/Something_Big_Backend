plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.insert'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'com.graphql-java:graphql-java-extended-scalars:21.0'

	//s3 settings
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation "org.hibernate.orm:hibernate-hikaricp:6.3.0.Final"


	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'com.github.leehj050211:bsm-oauth-java:1.0.3'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	implementation 'com.squareup.okhttp3:okhttp:4.10.0'

	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'


	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'com.h2database:h2'
	testImplementation 'org.assertj:assertj-core:3.21.0'

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'

	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

	annotationProcessor 'org.projectlombok:lombok'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

	annotationProcessor 'org.hibernate.orm:hibernate-jpamodelgen:6.2.2.Final'
	annotationProcessor 'org.hibernate.validator:hibernate-validator-annotation-processor:8.0.1.Final'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

compileJava {
	options.annotationProcessorPath = configurations.annotationProcessor
}
// === Querydsl 빌드 옵션 (선택사항) ===
def querydslDir = "$buildDir/generated/querydsl"


sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}


tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}
